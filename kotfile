# One to one creation of the justfile.

.cmd {
    `kot --kot=list`
}

.cmd run {
    `cargo run -- {{kot.args.last}}`
}

.cmd runr {
    `cargo run --release -- {{kot.args.last}}`
}

.cmd fmt {
    `cargo +nightly fmt`
}

.cmd check {
    `cargo +nightly fmt --check`
    `cargo clippy --all-targets --locked --workspace -- -D warnings`
    `cargo clippy --all-targets --locked --workspace --release -- -D warnings`
}

.cmd docker {
    `docker run -it --rm --pull=always \
        -e CARGO_TARGET_DIR=/ptarget \
        --mount type=bind,source={{pwd}},target=/project \
        --mount type=bind,source=$HOME/.cargo/registry,target=/usr/local/cargo/registry \
        -w /project \
        rust:latest \
        bash`
}

.cmd docker-alpine {
    `docker run -it --rm --pull=always \
        -e CARGO_TARGET_DIR=/ptarget \
        --mount type=bind,source={{pwd}},target=/project \
        --mount type=bind,source=$HOME/.cargo/registry,target=/usr/local/cargo/registry \
        -w /project \
        rust:alpine \
        sh`
}

.cmd hack {
    `docker run -t --rm --pull=always \
        -e CARGO_TARGET_DIR=/ptarget \
        --mount type=bind,source={{pwd}},target=/project \
        --mount type=bind,source=$HOME/.cargo/registry,target=/usr/local/cargo/registry \
        -w /project \
        rust:latest \
        bash -c "curl --proto '=https' --tlsv1.2 -sSf \
        https://raw.githubusercontent.com/cargo-prebuilt/cargo-prebuilt/main/scripts/install-cargo-prebuilt.sh | bash \
        && cargo prebuilt cargo-hack --ci \
        && cargo hack check --each-feature --no-dev-deps --verbose --workspace \
        && cargo hack check --feature-powerset --no-dev-deps --verbose --workspace"`
}

.cmd msrv {
    `docker run -t --rm --pull=always \
        -e CARGO_TARGET_DIR=/ptarget \
        --mount type=bind,source={{pwd}},target=/project \
        --mount type=bind,source=$HOME/.cargo/registry,target=/usr/local/cargo/registry \
        -w /project \
        rust:latest \
        bash -c 'cargo install cargo-msrv --version 0.15.1 --profile=dev \
        && cargo msrv -- cargo check --verbose --locked'`
}

.cmd cargo-test-repo-kotfile {
    `echo '{{kot.args.last}}' > target/cargo-test-repo-kotfile`
}
